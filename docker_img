pipeline{

        agent any
		environment {
				DOCKERHUB_CREDENTIALS=credentials('dockerhub-cred')
				EMAIL_TO = 'shanmugha13@gmail.com'
		}
                stages {
					stage('Build Docker image')
					{
							steps{
									sh 'docker build -t shanmugha13/weatherapp /opt/project/k8-pipeline/'               
							}
					}
					stage('check-in DockerHub')
					{
							steps{
									sh 'echo $DOCKERHUB_CREDENTIALS_PSW | docker login -u $DOCKERHUB_CREDENTIALS_USR --password-stdin'                  
							}
					}
					stage("Approve image to push into DockerHub") {
						steps {
							script {
								def userInput = input(id: 'Proceed1', message: 'Promote build?', parameters: [[$class: 'BooleanParameterDefinition', defaultValue: true, description: '', name: 'Please confirm you agree with this']])
								echo 'userInput: ' + userInput
					
								if(userInput == true) {
									// do action
								} else {
									// not do action
									echo "Action was aborted."
								}
					
							}    
						}  
					}					
					stage('Push image into DockerHub')
					{
							steps{
									sh 'docker push shanmugha13/weatherapp'                
							}
					}
        }
		post {
				always {
						sh 'docker logout'
				}
				failure {
				        emailext body: 'Check console output at $BUILD_URL to view the results. \n\n ${CHANGES} \n\n --------------- \n${BUILD_LOG, maxLines=100, escapeHtml=false}',
				        to: "${EMAIL_TO}",
				        subject: 'Build failed in Jenkins: $PROJECT_NAME - #$BUILD_NUMBER'
				}
				success {
				        emailext body: 'Check console output at $BUILD_URL to view the results. \n\n ${CHANGES} \n\n --------------- \n${BUILD_LOG, maxLines=100, escapeHtml=false}',
				        to: "${EMAIL_TO}",
				        subject: 'Build success in Jenkins: $PROJECT_NAME - #$BUILD_NUMBER'
				}
        }
}


